/*
 * This file was automatically generated by EvoSuite
 * Fri Jun 14 12:39:23 GMT 2024
 */

package ir.ramtung.impl1;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import ir.ramtung.impl1.Library;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Library_ESTest extends Library_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addBook("-[P\"u\"0G=an2g", (-2402));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Negative or zero copies of a document cannot be added
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Library library0 = new Library();
      library0.timePass(0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.borrow("'M7LkQ}2", (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot find document to borrow
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine((String) null, 1100, 178, 178);
      try { 
        library0.borrow("'M7LkQ}2", (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot find member to borrow
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine((String) null, 610, 610, 610);
      library0.addStudentMember((String) null, (String) null);
      library0.borrow((String) null, (String) null);
      library0.timePass(926);
      int int0 = library0.getTotalPenalty((String) null);
      assertEquals(1848000, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember("0]^\"dmx", "uD?2xp;~rkRSp/`Q\"r2");
      try { 
        library0.addStudentMember("0]^\"dmx", "uD?2xp;~rkRSp/`Q\"r2");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Member with the same name exists
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addMagazine("", 690, 1673, 490);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Documents with empty title are not allowed
         //
         verifyException("ir.ramtung.impl1.Document", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("4~]~ u_h41wg");
      try { 
        library0.getTotalPenalty("Document is not available to borrow");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot find member
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Library library0 = new Library();
      library0.addProfMember("wW4Wbz4");
      try { 
        library0.addProfMember("wW4Wbz4");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Member with the same name exists
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Library library0 = new Library();
      library0.addStudentMember((String) null, (String) null);
      library0.addProfMember("ir.ramtung.sts01.LibraryException");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Library library0 = new Library();
      library0.addBook("NN|", 76);
      try { 
        library0.addReference("NN|", 76);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Document with the same title exists
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.addBook("S7Id<%e", 0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Negative or zero copies of a document cannot be added
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine((String) null, 610, 610, 610);
      library0.addStudentMember((String) null, (String) null);
      library0.borrow((String) null, (String) null);
      try { 
        library0.returnDocument((String) null, "ir.ramtung.sts01.LibraryException");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The document is not in member's loan
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine((String) null, 610, 610, 610);
      library0.addStudentMember((String) null, (String) null);
      library0.borrow((String) null, (String) null);
      try { 
        library0.extend("[s+KADOt5~u", (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // The document is not in member's loan
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine((String) null, 610, 610, 610);
      library0.addStudentMember((String) null, (String) null);
      library0.borrow((String) null, (String) null);
      int int0 = library0.getTotalPenalty((String) null);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Library library0 = new Library();
      try { 
        library0.timePass((-1));
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot go back in time
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine((String) null, 579, 2677, 579);
      library0.addStudentMember((String) null, (String) null);
      library0.borrow((String) null, (String) null);
      try { 
        library0.extend((String) null, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot extend on the same day borrowed
         //
         verifyException("ir.ramtung.impl1.Loan", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine((String) null, 579, 2677, 579);
      List<String> list0 = library0.availableTitles();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Library library0 = new Library();
      List<String> list0 = library0.availableTitles();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine((String) null, 54, 54, 54);
      library0.addStudentMember((String) null, (String) null);
      library0.borrow((String) null, (String) null);
      library0.borrow((String) null, (String) null);
      try { 
        library0.borrow((String) null, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Cannot borrow more documents
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine((String) null, 1, 1, 1);
      library0.addStudentMember((String) null, (String) null);
      library0.borrow((String) null, (String) null);
      try { 
        library0.borrow((String) null, (String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Document is not available to borrow
         //
         verifyException("ir.ramtung.impl1.Library", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Library library0 = new Library();
      library0.addMagazine((String) null, 579, 2677, 579);
      library0.addStudentMember((String) null, (String) null);
      library0.borrow((String) null, (String) null);
      library0.returnDocument((String) null, (String) null);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Library library0 = new Library();
      library0.addReference("ir.ramtung.impl1.Loan", 2755);
  }
}
